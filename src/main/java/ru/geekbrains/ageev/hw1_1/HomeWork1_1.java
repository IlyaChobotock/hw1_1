package ru.geekbrains.ageev.hw1_1;

public class HomeWork1_1 {

// 1. Создать пустой проект в IntelliJ IDEA и прописать метод main()

    public static void main(String[] args) {

// 2. Создать переменные всех пройденных типов данных и инициализировать их значения

        byte a = 3;
        short b = 32766;
        int c = 40000000;
        long d = 3215465498798L;
        float e = 87.355f;
        double f = 22.223325478;
        char g = '\u1325';
        boolean h = true;

// Проинициализированные переменные (к задаче 3)

        float aa = 2.34f;
        float bb = 31.2f;
        float cc = 111.541f;
        float dd = 96.16662f;

// Обращаемся к методу mathOperations с передачей в него переменных aa, bb, cc, dd (к задаче 3)

        float result = mathOperation(aa, bb, cc, dd);

// Вывод результата (к задаче 3)

        System.out.println(result);

// Два целых числа (к задаче 4)

        int aaa = 4;
        int bbb = 19;

// Обращаемся к методу sumCheck с передачей в него переменных aaa, bbb (к задаче 4)

        boolean bool = sumCheck(aaa, bbb);

// Вывод результата (к задаче 4)

        System.out.println(bool);

// Число (к задаче 5)

        int aaaa = -66;

// Обращаемся к методу posOrNeg c передачей в него переменной aaaa (к задаче 5)

        posOrNeg(aaaa);

// Число (к задаче 6)

        int val = -3594;

// Обращаемся к методу numCheck c передачей в него переменной val и сразу выводим в консоль (к задаче 6)

        System.out.println(numCheck(val));

// Имя (к задаче 7)

        String name = "Илья";

// Обращаемся к методу hello (к задаче 7)

        hello(name);

// Благодарность

        System.out.println("\n Станислав, спасибо за урок!");

    }

/* 3. Написать метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат,
где a, b, c, d – аргументы этого метода, имеющие тип float */

    /**
     * Метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат
     * @param a агрумент float
     * @param b агрумент float
     * @param c агрумент float
     * @param d агрумент float
     * @return результат математической операции в формате float
     */
    static float mathOperation (float a, float b, float c, float d){
        float result = a * (b + (c / d));
        return result;
    }

/* 4. Написать метод, принимающий на вход два целых числа и проверяющий, что их сумма лежит
в пределах от 10 до 20 (включительно), если да – вернуть true, в противном случае – false */

    /**
     * Метод, проверяющий, что сумма двух целых чисел лежит в пределах от 10 до 20 (включительно)
     * @param a целое число
     * @param b целое число
     * @return если да – вернуть true, в противном случае – false
     */
    static boolean sumCheck (int a, int b){
        if (a + b > 10 && a + b <= 20) {
            return true;
        }
        else {
            return false;
        }
    }

/* 5. Написать метод, которому в качестве параметра передается целое число, метод должен
напечатать в консоль, положительное ли число передали или отрицательное. Замечание: ноль
считаем положительным числом */

    /**
     * Метод, которому в качестве параметра передается целое число, метод должен
     * напечатать в консоль, положительное ли число передали или отрицательное
     * @param a целое число
     */
    static void posOrNeg (int a){
        if (a >= 0) {
            System.out.println("Введено положительное число");
        }
        else {
            System.out.println("Введено отрицательное число");
        }
    }

/* 6. Написать метод, которому в качестве параметра передается целое число. Метод должен
вернуть true, если число отрицательное, и вернуть false если положительное */

    /**
     * Метод, которому в качестве параметра передается целое число
     * @param a целое число
     * @return вернуть true, если число отрицательное, и вернуть false если положительное
     */
    static boolean numCheck (int a){
        if (a >= 0) {
            return false;
        }
        else {
            return true;
        }
    }

/* 7. Написать метод, которому в качестве параметра передается строка, обозначающая имя.
Метод должен вывести в консоль сообщение «Привет, указанное_имя!» */

    /**
     * Метод, которому в качестве параметра передается строка, обозначающая имя. Для приветствия
     * @param name - имя
     */
    static void hello (String name){
        System.out.println("Привет, " + name + "!");
    }
}
